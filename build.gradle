plugins {
    id "java"
    id "distribution"
    id "org.jreleaser" version "0.10.0"
}

apply plugin: "net.f1db"

group = "net.f1db"

repositories {
    mavenCentral()
}

distributions {
    json {
        distributionBaseName = "f1db-json"
        contents {
            from "${buildDir}/data/f1db.json"
        }
    }
    smile {
        distributionBaseName = "f1db-smile"
        contents {
            from "${buildDir}/data/f1db.sml"
        }
    }
    sqlite {
        distributionBaseName = "f1db-sqlite"
        contents {
            from "${buildDir}/data/f1db.db"
        }
    }
}

f1db {
    currentSeason = 2022
    wdcDecided = property("wdcDecided").toBoolean()
    wccDecided = property("wccDecided").toBoolean()
    indentOutput = false
}

jreleaser {
    project {
        name = "f1db"
        // TODO: https://github.com/jreleaser/jreleaser/issues/642 - CalVer cannot parse MINOR/MICRO with value 0
        // TODO: https://github.com/jreleaser/jreleaser/issues/643 - CalVer cannot parse optional MODIFIER
        // TODO: versionPattern = "CALVER:YYYY.MINOR.MICRO[.MODIFIER]"
        description = "Open Source Formula 1 Database"
        website = "https://www.f1db.net"
        license = "CC-BY-4.0"
        licenseUrl = "https://spdx.org/licenses/CC-BY-4.0.html"
        copyright = "F1DB"
    }
    files {
        artifact {
            path = "${buildDir}/distributions/f1db-json-{{projectVersion}}.zip"
        }
        artifact {
            path = "${buildDir}/distributions/f1db-smile-{{projectVersion}}.zip"
        }
        artifact {
            path = "${buildDir}/distributions/f1db-sqlite-{{projectVersion}}.zip"
        }
    }
    release {
        github {
            enabled = true
            owner = "f1db"
            name = "f1db"
            username = "marceloverdijk"
            commitAuthor {
                name = "F1DB"
                email = "info@f1db.net"
            }
            changelog {
                enabled = false
            }
            skipTag = true
        }
    }
}

tasks.withType(Tar) {
    enabled = false
}
